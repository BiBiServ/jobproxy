---
swagger: "2.0"
info:
  description: "JobProxy REST API for running task independent of the framework"
  version: "0.1.0.beta.1.9"
  title: "JobProxy"
  termsOfService: "https://github.com/BiBiServ/jobproxy"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
paths:
  /v1/jobproxy/delete/{id}:
    delete:
      summary: "Delete a Task."
      description: "Delete a Task."
      operationId: "delete"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        default:
          description: "successful operation"
  /v1/jobproxy/ping:
    get:
      summary: "Just a simple ping command."
      description: "Just a simple ping command."
      operationId: "ping"
      produces:
      - "text/plain"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
  /v1/jobproxy/state:
    get:
      summary: "Returns  the state of all tasks."
      description: "Returns  the state of all tasks in machine readable format (either\
        \ xml or json \n     * depending on  request-header mime-type)"
      operationId: "stateGet"
      produces:
      - "application/json"
      - "application/xml"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/States"
  /v1/jobproxy/state/{id}:
    get:
      summary: "Returns the state of one task."
      description: "Returns the state of one task with given id in machine readable\
        \ format.\n     * (either xml or json depending on  request-header mime-type)"
      operationId: "statePost"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/State"
  /v1/jobproxy/submit:
    post:
      summary: "Submit a task"
      description: "Submit a task"
      operationId: "submit"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "text/plain"
      parameters:
      - in: "body"
        name: "task"
        required: false
        schema:
          $ref: "#/definitions/Task"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
definitions:
  Mount:
    type: "object"
    required:
    - "container"
    - "host"
    - "mode"
    properties:
      host:
        type: "string"
        minLength: 1
        maxLength: 2147483647
      container:
        type: "string"
        minLength: 1
        maxLength: 2147483647
      mode:
        type: "string"
        minLength: 1
        maxLength: 2147483647
  Port:
    type: "object"
    properties:
      host:
        type: "integer"
        format: "int32"
      container:
        type: "integer"
        format: "int32"
  State:
    type: "object"
    required:
    - "code"
    - "id"
    properties:
      id:
        type: "string"
      code:
        type: "string"
      description:
        type: "string"
      stdout:
        type: "string"
      stderr:
        type: "string"
  States:
    type: "object"
    required:
    - "state"
    properties:
      state:
        type: "array"
        items:
          $ref: "#/definitions/State"
  TContainer:
    type: "object"
    required:
    - "image"
    properties:
      image:
        type: "string"
        minLength: 1
        maxLength: 2147483647
      ports:
        type: "array"
        items:
          $ref: "#/definitions/TPorts"
      mounts:
        type: "array"
        items:
          $ref: "#/definitions/TMounts"
  TMounts:
    type: "object"
    required:
    - "mount"
    properties:
      mount:
        $ref: "#/definitions/Mount"
  TPorts:
    type: "object"
    required:
    - "port"
    properties:
      port:
        $ref: "#/definitions/Port"
  Task:
    type: "object"
    required:
    - "user"
    properties:
      user:
        type: "string"
        minLength: 1
        maxLength: 2147483647
      cores:
        type: "integer"
        format: "int32"
      memory:
        type: "integer"
        format: "int32"
      cputime:
        type: "integer"
        format: "int32"
      stdout:
        type: "string"
      stderr:
        type: "string"
      cmd:
        type: "string"
      container:
        $ref: "#/definitions/TContainer"
